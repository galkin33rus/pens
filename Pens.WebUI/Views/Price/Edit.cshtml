@model Pens.Domain.Entities.Price

@{
    ViewBag.Title = (Model.PriceID != 0) ? "Редактирование услуги" : "Новая услуга";
    var sl = (SelectList)ViewBag.Branch;
}

<div class="page-header">
    <h2>@ViewBag.Title</h2>
</div>

<div class="container">
    
        @using (Html.BeginForm("Edit", "Price", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="">
                <div class="form-horizontal">
                    
               
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.PriceID)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Kod, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Kod, null, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Kod, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CostR, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CostR, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CostR, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BranchID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <select class="form-control" name="BranchID" id="BranchID">
                                @foreach (var item in sl)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Сохранить" class="btn btn-success" />
                            @Html.ActionLink("Вернуться к списку", "Index", null, new
                            {
                                @class = "btn btn-link"
                            })
                        </div>

                    </div>
                </div>
            </div>
        }
    </div>


