@model Pens.Domain.Entities.Docs

<script src="~/Scripts/bootstrap.js"></script>
<script src="~/Scripts/main/pacients.js"></script>

@{
    ViewBag.Title = (Model.DocID != 0) ? "Редактирование документа" : "Новый документ";
    int i = 0;
            
}

<div class="page-header">
    <h2>@ViewBag.Title</h2>
</div>

@using (Html.BeginForm("Edit", "Register", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">                
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
               
        @Html.HiddenFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })  
        @Html.HiddenFor(model => model.DocID, new { htmlAttributes = new { @class = "form-control" } })               
                   
        <div class="form-group">
            @Html.LabelFor(model => model.DateDoc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.DateDoc, new { htmlAttributes = new { @class = "form-control data-input" } })
                @Html.ValidationMessageFor(model => model.DateDoc, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.BranchID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.BranchID, ViewBag.Branch as SelectList, "Выберите отделение", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.FIO, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <div class="input-group">
                    @Html.EditorFor(model => model.FIO, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                    <span class="input-group-btn">
                        <button type="button" id="showPacients" value="" class="btn btn-primary" data-target="#myModal">Выбрать пациента</button>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.FIO, "", new { @class = "text-danger" })                   
            </div>            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">                
                @Html.EditorFor(model => model.DateBirth, new { htmlAttributes = new { @class = "form-control data-input", disabled = "disabled" } })                     
                @Html.ValidationMessageFor(model => model.DateBirth, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-1">
                <select id="Gender" name="Gender" class="form-control" disabled="disabled">
                    @foreach (var gender in ViewBag.Gender)
                    {
                        <option value="@gender" @(gender == Model.Gender ? "selected" : "")>@gender</option>
                    }
                </select>               
            </div>@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Org, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Org, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Org, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pasport, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Pasport, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Pasport, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.NoTK, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.NoTK, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.NoTK, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StRod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.StRod, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.StRod, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.FIORod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.FIORod, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.FIORod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KodMKB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="input-group">
                    @Html.EditorFor(model => model.KodMKB, new { htmlAttributes = new { @class = "form-control text-uppercase", disabled = "disabled" } })
                    <span class="input-group-btn">
                        <button class="btn btn-primary" type="button" id="showMKB" data-target="#myModal"><span class="glyphicon glyphicon glyphicon-search" aria-hidden="true"></span></button>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.KodMKB, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <input type="button" id="showPrice" value="Выбрать услуги" class="btn btn-primary" />
            </div>
            
        </div>

        <div class="form-group">
            <div class="col-md-offset-1 col-md-9">
                <table id="table-services" class="table">
                    <tr>          
                        <th class="hidden"></th>     
                        <th class="text-center">Код</th>
                        <th class="text-center">Наименование</th>
                        <th class="text-center">Цена</th>
                        <th class="text-center">Себестоимость</th>
                        <th class="text-center">Количество</th>
                        <th class="text-center">Разница</th>
                        <th class="text-center"></th>
                    </tr>                      
                    @foreach (var service in Model.Services) {                         
                        <tr class="table-row">
                            <td class="hidden">
                                @Html.Hidden("Services[" + i + "].ServiceID", service.ServiceID, new { @id = "Services[" + i + "].ServiceID" })
                                @Html.Hidden("Services[" + i + "].PriceID", service.PriceID, new { @id = "Services[" + i + "].PriceID" })
                                @Html.Hidden("Services[" + i + "].Kod", service.Kod, new { @id = "Services[" + i + "].Kod" })
                                @Html.Hidden("Services[" + i + "].Title", service.Title, new { @id = "Services[" + i + "].Title" })
                                @Html.Hidden("Services[" + i + "].Cost", service.Cost, new { @id = "Services[" + i + "].Cost" })
                                @Html.Hidden("Services[" + i + "].CostR", service.CostR, new { @id = "Services[" + i + "].CostR" })
                                @Html.Hidden("Services[" + i + "].BranchID", service.BranchID, new { @id = "Services[" + i + "].BranchID" })
                            </td>                            
                            <td class="text-center">@service.Kod</td>
                            <td class="text-center">@service.Title</td>
                            <td class="text-center">@service.Cost</td>
                            <td class="text-center">@service.CostR</td>
                            <td class="text-center">@Html.TextBox("Services[" + i + "].Quantity", service.Quantity, new { @class = "form-control", @id = "Services[" + i + "].Quantity", @onkeydown = "keyUpQuantity(this, event)", @maxlength = "2", @onchange = "changeQuantity(this)" })</td>
                            <td class="text-center">@((service.CostR - service.Cost) * @service.Quantity)</td>
                            <td class="text-center"><button type='button' onclick='delService(this)' class='btn btn-warning'><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></button></td>
                        </tr>
                        { i++; }
                    }
                    <tr>
                        <td colspan="4" class="text-center"></td>                        
                        <td class="text-right">Общая сумма:</td>
                        <td colspan="2" class="text-left"><span class="control-label" id="allSumm">0</span></td>                        
                    </tr>                   
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-9">
                <input type="submit" onclick="unDisable()" value="Сохранить" class="btn btn-success" />
                @Html.ActionLink("Вернуться к списку", "Index", null, new
                            {
                                @class = "btn btn-link"
                            })
            </div>
        </div>
    </div>
}

<!-- Modal Pacients -->
<div class="modal fade" id="modalPacients" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Справочник пациентов</h4>
            </div>
            <div class="modal-body">      
                <div class="row">
                    <div class="form-group col-md-12">
                        <div class="col-md-7">
                            <input type="text" id="seachTextPacient" class="form-control">
                        </div>
                        <input type="button" id="searchPacients" class="btn btn-success" value="Найти" />
                        <input type="button" id="searchPacientsClear" class="btn btn-danger" value="Сбросить" />
                        <input type="button" id="searchPacientsNew" class="btn btn-info" value="Новый пациент" />

                    </div>
                </div>
                <div class="row">
                    <div id="modalPacientsResult" class="modal-result col-md-12">

                    </div>
                </div>       
            </div>
            <div class="modal-footer">
                <button type="button" id="btnSetPacient" class="btn btn-primary">Выбрать пациента</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>

            </div>
        </div>
    </div>
</div>


<!-- Modal Price -->
<div class="modal fade" id="modalPrice" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Прайс</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group col-md-12">
                        <div class="col-md-9">
                            <input type="text" id="seachTextPrice" class="form-control">
                        </div>
                        <input type="button" id="searchPrice" class="btn btn-success" value="Найти" />
                        <input type="button" id="searchPriceClear" class="btn btn-danger" value="Сбросить" />
                    </div>
                </div>
                <div class="row">
                    <div id="modalPriceResult" class="modal-result col-md-12">

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnSetPrice" class="btn btn-primary">Выбрать услугу</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Готово</button>

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalNewPacient" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"></div>

<div class="modal fade" id="modalMKB" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">МКБ-10</h4>
            </div>
            <div id="resultIndexMKB" class="modal-body modal-result">
                
            </div>
            <div class="modal-footer">
                <button type="button" id="btnSetMKB" class="btn btn-primary">Выбрать диагноз</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>

            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var UrlGetPacientsData = '@Url.Action("GetPacientsData", "Pacients")';
    var UrlPacientsPartial = '@Url.Action("Partial", "Pacients")';
    var UrlGetPacientDataJson = '@Url.Action("GetPacientDataJson", "Pacients")';

    function unDisable() {
        $("input[disabled]").removeAttr("disabled");
        $("select[disabled]").removeAttr("disabled");
    }

    function changeRow(obj) {
        if (!$(obj).hasClass("selectRow")) {
            $(obj).parent().children().removeClass("selectRow");
            $(obj).addClass("selectRow");
        }
    }

    function loadPacient(p) {
        if (p) {
            $("#FIO").val(p.fio);
            $("#DateBirth").val(p.dateBirth);
            $("#Gender").val(p.gender);
            $("#Org").val(p.org);
            $("#Position").val(p.position);
            $("#Pasport").val(p.pasport);
            $("#NoTK").val(p.noTk);
            $("#StRod").val(p.stRod);
            $("#FIORod").val(p.fioRod);
        }
        $("#modalPacients").modal('hide');

    }

    function loadPrice(p) {

        if (p) {
            var i = 0;
            var rows = $("#table-services").find(".table-row");
            if (rows) {
                i = rows.length;
            }
            var tdPriceID = "<td class='hidden'>"
                + "<input type='hidden' id='Services[" + i + "].PriceID' name='Services[" + i + "].PriceID' value='" + p.priceID + "' />"
                + "<input type='hidden' id='Services[" + i + "].Kod' name='Services[" + i + "].Kod' value='" + p.kod + "' />"
                + "<input type='hidden' id='Services[" + i + "].Title' name='Services[" + i + "].Title' value='" + p.title + "' />"
                + "<input type='hidden' id='Services[" + i + "].Cost' name='Services[" + i + "].Cost' value='" + p.cost + "' />"
                + "<input type='hidden' id='Services[" + i + "].CostR' name='Services[" + i + "].CostR' value='" + p.costR + "' />"
                + "<input type='hidden' id='Services[" + i + "].BranchID' name='Services[" + i + "].BranchID' value='" + p.costR + "' />"
                + "</td>";
            var tdKod = "<td class='text-center'>" + p.kod + "</td>";
            var tdTitle = "<td class='text-center'>" + p.title + "</td>";
            var tdCost = "<td class='text-center'>" + p.cost + "</td>";
            var tdCostR = "<td class='text-center'>" + p.costR + "</td>";
            var tdQuantity = "<td class='text-center'><input type='text' id='Services[" + i + "].Quantity' name='Services[" + i + "].Quantity' onkeydown='keyUpQuantity(this, event)' maxlength='2' onchange='changeQuantity(this)' class='form-control' value='1'/></td>";
            var tdSumm = "<td class='text-center'>" + (p.costR - p.cost) + "</td>";
            $("#table-services tr:last").before("<tr class='table-row'>" + tdPriceID + tdKod + tdTitle + tdCost + tdCostR + tdQuantity + tdSumm + "<td class='text-center'><button type='button' onclick='delService(this)' class='btn btn-warning'><span class='glyphicon glyphicon-trash' aria-hidden='true'></span></button></td></tr>");
            $("#allSumm").text(getAllSumm());
            i++;
        }
        $("#showPrice").modal('hide');

    }

    function changeQuantity(obj) {
        if (!$(obj).val()) { $(obj).val(1); }
        var quantity = $(obj).val();
        var cost = $(obj).parent().prev().prev().text();
        var costR = $(obj).parent().prev().text();
        $(obj).parent().next().text(quantity * (costR - cost));
        $("#allSumm").text(getAllSumm());
    }

    function getAllSumm() {
        var q = 0;
        $("#table-services input:visible").each(function () {
            q += $(this).parent().next().text() - 0;
        });
        return q;
    }

    function keyUpQuantity(obj, e) {
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A, Command+A
            (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    }

    function delService(obj) {
        $(obj).parent().parent().remove();
        var rows = $("#table-services").find(".table-row");
        for (var i = 0; i < rows.length; i++) {
            var inputs = $(rows[i]).find(":input");
            for (var j = 0; j < inputs.length; j++) {
                if ($(inputs[j]).attr('id')) {
                    var idtext = $(inputs[j]).attr('id').replace(/\[\d+\]/, "[" + i + "]");
                    $(inputs[j]).attr("id", idtext);
                    $(inputs[j]).attr("name", idtext);
                }
            }
        }
        $("#allSumm").text(getAllSumm());
    }

    $(document).ready(function () {
        $("#allSumm").text(getAllSumm());

        $('#showPrice').click(function (e) {
            e.preventDefault();
            $.ajax({
                url: '@Url.Action("GetPriceData", "Price")',
                success: function (data) {
                    $("#modalPrice .modal-result").html(data);
                    $("#modalPrice").modal('show');
                }
            });
        });
        $('#searchPrice').click(function (e) {
            e.preventDefault();
            $.ajax({
                url: '@Url.Action("GetPriceData", "Price")',
                data: { seachText: $("#seachTextPrice").val() },
                success: function (data) {
                    $("#modalPrice .modal-result").html(data);
                }
            });
        });
        $('#searchPriceClear').click(function (e) {
            e.preventDefault();
            $("#seachTextPrice").val("");
            $.ajax({
                url: '@Url.Action("GetPriceData", "Price")',
                data: { seachText: $("#seachTextPrice").val() },
                success: function (data) {
                    $("#modalPrice .modal-result").html(data);
                }
            });
        });
        $('#btnSetPrice').click(function (e) {
            e.preventDefault();
            var id = $("#modalPrice .selectRow:first > td:first").html();
            if (id) {
                $.ajax({
                    data: { id: id },
                    url: '@Url.Action("GetPriceDataJson", "Price")',
                    success: function (data) {
                        loadPrice(data);
                    }
                });
            }
        });
        $('#showMKB').click(function (e) {
            e.preventDefault();
            $.ajax({
                url: '@Url.Action("PartialListMKB", "MKB")',
                success: function (data) {
                    $("#resultIndexMKB").html(data);
                    $("#modalMKB").modal('show');
                }
            });
        });
        $('#btnSetMKB').click(function (e) {
            e.preventDefault();
            var id = $("#modalMKB .selectRow:first > td:first").text().trim();
            if (id) {
                $("#KodMKB").val(id);
                $("#modalMKB").modal('hide');
            }
        });

    })
</script>
